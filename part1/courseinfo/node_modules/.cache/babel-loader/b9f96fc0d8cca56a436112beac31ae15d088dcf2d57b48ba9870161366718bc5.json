{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ISSH\\\\clonewars\\\\fullstackopen\\\\part1\\\\src\\\\App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  const course = 'Half Stack application development';\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  };\n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  };\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  };\n  const Header = props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  };\n  const Part = props => {\n    console.log(props);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part.name, \" \", part.exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this);\n  };\n  const Content = props => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Part, {\n        part: props.part[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        part: props.part[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Part, {\n        part: props.part[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  };\n  const Total = props => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises: \", props.count[0].exercises + props.count[1].exercises + props.count[2].exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      part: [part1, part2, part3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      count: [part1, part2, part3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","course","part1","name","exercises","part2","part3","Header","props","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","Part","console","log","part","Content","_Fragment","Total","count","_c","$RefreshReg$"],"sources":["C:/Users/ISSH/clonewars/fullstackopen/part1/src/App.js"],"sourcesContent":["const App = () => {\n  const course = 'Half Stack application development'\n\n  const part1 = {\n    name: 'Fundamentals of React',\n    exercises: 10\n  }\n  \n  const part2 = {\n    name: 'Using props to pass data',\n    exercises: 7\n  }\n\n  const part3 = {\n    name: 'State of a component',\n    exercises: 14\n  }\n\nconst Header=(props)=>{\n  return(\n    <h1>{props.course}</h1>\n  )\n}\n\nconst Part=(props)=>{\n  console.log(props)\n  return(<p>{part.name} {part.exercises}</p>)\n }\n\nconst Content=(props)=>{\n\n  return(\n  <>\n    <Part part={props.part[0]}/>\n    <Part part={props.part[1]}/>\n    <Part part={props.part[2]}/>\n  </>\n  )\n\n}\n\nconst Total=(props)=>{\n  return(\n    <p>Number of exercises: {props.count[0].exercises+props.count[1].exercises+props.count[2].exercises}</p>\n  )\n}\n\n  return (\n    <div>\n      <Header course={course}/>\n      <Content part={[part1,part2,part3]}/>\n\n      <Total count={[part1,part2,part3]}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,MAAMA,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMC,MAAM,GAAG,oCAAoC;EAEnD,MAAMC,KAAK,GAAG;IACZC,IAAI,EAAE,uBAAuB;IAC7BC,SAAS,EAAE;EACb,CAAC;EAED,MAAMC,KAAK,GAAG;IACZF,IAAI,EAAE,0BAA0B;IAChCC,SAAS,EAAE;EACb,CAAC;EAED,MAAME,KAAK,GAAG;IACZH,IAAI,EAAE,sBAAsB;IAC5BC,SAAS,EAAE;EACb,CAAC;EAEH,MAAMG,MAAM,GAAEC,KAAK,IAAG;IACpB,oBACEC,OAAA;MAAAC,QAAA,EAAKF,KAAK,CAACP;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAE3B,CAAC;EAED,MAAMC,IAAI,GAAEP,KAAK,IAAG;IAClBQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClB,oBAAOC,OAAA;MAAAC,QAAA,GAAIQ,IAAI,CAACf,IAAI,EAAC,GAAC,EAACe,IAAI,CAACd,SAAS;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC3C,CAAC;EAEF,MAAMK,OAAO,GAAEX,KAAK,IAAG;IAErB,oBACAC,OAAA,CAAAW,SAAA;MAAAV,QAAA,gBACED,OAAA,CAACM,IAAI;QAACG,IAAI,EAAEV,KAAK,CAACU,IAAI,CAAC,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC5BL,OAAA,CAACM,IAAI;QAACG,IAAI,EAAEV,KAAK,CAACU,IAAI,CAAC,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC5BL,OAAA,CAACM,IAAI;QAACG,IAAI,EAAEV,KAAK,CAACU,IAAI,CAAC,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA,gBAC3B;EAGL,CAAC;EAED,MAAMO,KAAK,GAAEb,KAAK,IAAG;IACnB,oBACEC,OAAA;MAAAC,QAAA,GAAG,uBAAqB,EAACF,KAAK,CAACc,KAAK,CAAC,CAAC,CAAC,CAAClB,SAAS,GAACI,KAAK,CAACc,KAAK,CAAC,CAAC,CAAC,CAAClB,SAAS,GAACI,KAAK,CAACc,KAAK,CAAC,CAAC,CAAC,CAAClB,SAAS;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAE5G,CAAC;EAEC,oBACEL,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACF,MAAM;MAACN,MAAM,EAAEA;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACzBL,OAAA,CAACU,OAAO;MAACD,IAAI,EAAE,CAAChB,KAAK,EAACG,KAAK,EAACC,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAErCL,OAAA,CAACY,KAAK;MAACC,KAAK,EAAE,CAACpB,KAAK,EAACG,KAAK,EAACC,KAAK;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChC;AAEV,CAAC;AAAAS,EAAA,GAvDKvB,GAAG;AAyDT,eAAeA,GAAG;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}